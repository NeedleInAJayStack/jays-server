name: jays-server
services:

  # API
  api:
    profiles:
      - api
    container_name: api-server
    image: ghcr.io/needleinajaystack/api-server:main
    restart: unless-stopped
    env_file: ./api/.env
    ports:
      - '8082:80'
      - '2112:2112'
    networks:
      - monitoring
      - timescaledb

  # Bitwarden
  bitwarden:
    profiles:
      - bitwarden
    container_name: bitwarden
    image: vaultwarden/server
    restart: unless-stopped
    env_file: ./bitwarden/.env
    environment:
      - DOMAIN=https://bitwarden.herron.dev
      - PUSH_ENABLED=true
      - SIGNUPS_ALLOWED=false
    ports:
      - 3010:80
    volumes:
      - ~/Data/docker/bitwarden:/data/

  # Davical
    # Sourced from https://github.com/Elrondo46/davical-docker-standalone/blob/main/docker-compose.yml
    # Set the following environment variables:
    # - POSTGRES_PASSWORD: Should match PGSQL_ROOT_PASS
    # - PGSQL_ROOT_PASS: Should match POSTGRES_PASSWORD
    # - PASSDAVDB
    # - ADMINDAVICALPASS
  db: # This CANNOT be changed from db (even if changed below), since it appears to be hardcoded in DAViCal config. :(
    profiles:
      - davical
    image: postgres:14
    restart: unless-stopped
    volumes:
      - ~/Data/docker/davical/postgresql/:/var/lib/postgresql/data
    user: '1000'
  davical:
    profiles:
      - davical
    container_name: davical
    image: tuxnvape/davical-standalone
    restart: unless-stopped
    env_file: ./davical/.env
    environment:
      HOST_NAME: "herron.dev"
      DBHOST: "db"
      LANG: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"
      DAVICAL_LANG: "en_US"
    ports:
      - 8083:80
    volumes:
      - ~/Data/docker/davical/config:/config

  # Envoy
  envoy:
    profiles:
      - envoy
    container_name: envoy
    image: envoyproxy/envoy:v1.28-latest
    restart: unless-stopped
    environment:
      - ENVOY_UID=0
    network_mode: host
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
      # You must provide your own certificate files. See `ansible` directory for certbot config.
      - /etc/letsencrypt/:/etc/letsencrypt/:ro

  # Monitoring
    # https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker/#run-grafana-via-docker-compose
  grafana:
    profiles:
      - monitoring
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    environment:
      - GF_SERVER_ROOT_URL=https://grafana.herron.dev/
    networks:
      - timescaledb
      - monitoring
    ports:
      - 3000:3000
    user: '1000' # Must match the user id of the user who owns the data directory
    volumes:
      - ~/Data/docker/grafana:/var/lib/grafana
  prometheus:
    profiles:
      - monitoring
    container_name: prometheus
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - monitoring
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
  node-exporter:
    profiles:
      - monitoring
    container_name: node-exporter
    image: prom/node-exporter:latest
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitoring
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  # Home Assistant
    # https://www.home-assistant.io/installation/linux#install-home-assistant-container
  homeassistant:
    profiles:
      - homeassistant
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant
    restart: unless-stopped
    environment:
      - TZ=America/Denver
    network_mode: host
    privileged: true
    user: '1000'
    volumes:
      - ~/Data/docker/HomeAssistant:/config

  # Mealie
    # https://docs.mealie.io/documentation/getting-started/installation/sqlite/
  mealie:
    profiles:
      - mealie
    container_name: mealie
    image: ghcr.io/mealie-recipes/mealie
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1000M
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Denver
      MAX_WORKERS: 1
      WEB_CONCURRENCY: 1
      BASE_URL: 'https://recipes.herron.dev/'
    ports:
      - 9925:9000
    volumes:
      - ~/Data/docker/mealie:/app/data
    user: '1000'

  mosquitto:
    profiles:
      - mosquitto
    container_name: mosquitto
    image: eclipse-mosquitto
    restart: unless-stopped
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - ./mosquitto/passwd:/mosquitto/config/passwd

  # Nextcloud
    # For documentation: https://github.com/nextcloud/all-in-one/blob/main/compose.yaml
  nextcloud:
    profiles:
      - nextcloud
    image: nextcloud/all-in-one:latest
    restart: unless-stopped
    container_name: nextcloud-aio-mastercontainer
    volumes:
      - nextcloud_aio_mastercontainer:/mnt/docker-aio-config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 8080:8080
    environment: # Is needed when using any of the options below
      - APACHE_PORT=11000
      - APACHE_IP_BINDING=127.0.0.1

  # Nginx
  # This will fight with envoy if both are running.
  # nginx:
  #   profiles:
  #     - nginx
  #   image: nginx
  #   container_name: nginx
  #   network_mode: host
  #   restart: unless-stopped
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     # You must provide your own certificate files
  #     - /etc/letsencrypt/:/etc/letsencrypt/:ro

  particle-sync:
    profiles:
      - particle-sync
    container_name: particle-sync
    image: registry.gitlab.com/needleinajaystack/particle-sync:latest
    restart: unless-stopped
    env_file:
      - ./particle-sync/.env

  # Plex
    # https://hub.docker.com/r/plexinc/pms-docker
  plex:
    profiles:
      - plex
    container_name: plex
    image: plexinc/pms-docker
    restart: unless-stopped
    privileged: true
    env_file: ./plex/.env # Should contain PLEX_CLAIM
    environment:
      - TZ=America/Denver
    network_mode: host
    devices:
      - /dev/bus/usb/001/002 # For TV Tuner
    volumes:
      - /var/lib/plexmediaserver:/config
      # - <path/to/transcode/temp>:/transcode # Uses container storage for transcoding if commented out
      - /home/jay/Audio:/data/Audio
      - /home/jay/Video:/data/Video
      - /home/jay/Image:/data/Image

  timescaledb:
    profiles:
      - timescaledb
    container_name: timescaledb
    image: timescale/timescaledb:2.16.0-pg14
    restart: unless-stopped
    command: -c config_file=/etc/postgresql.conf
    env_file: ./timescaledb/.env
    ports:
      - 5432:5432
    networks:
      - timescaledb
    volumes:
      - ~/Data/docker/timescaledb/:/var/lib/postgresql/data
      - ./timescaledb/postgresql.conf:/etc/postgresql.conf
      - /etc/passwd:/etc/passwd:ro # Bind-mounted for user access
    user: 1000:1000
  timescaledb-exporter:
    profiles:
      - timescaledb
    container_name: timescaledb-exporter
    image: quay.io/prometheuscommunity/postgres-exporter
    restart: unless-stopped
    env_file: ./timescaledb-exporter/.env # Include DATA_SOURCE_PASS
    environment:
      DATA_SOURCE_URI: "timescaledb:5432/postgres?sslmode=disable"
      DATA_SOURCE_USER: postgres
    expose:
      - 9187
    networks:
      - timescaledb
      - monitoring
    volumes:
      - ./timescaledb-exporter/postgres_exporter.yml:/postgres_exporter.yml:ro


  trello-bot:
    profiles:
      - trello-bot
    container_name: trello-bot
    image: ghcr.io/needleinajaystack/trello-bot:main
    restart: unless-stopped
    env_file:
      - ./trello-bot/.env
    ports:
      - '3333:3333'

  # Website
  website:
    profiles:
      - website
    container_name: website
    image: ghcr.io/needleinajaystack/website:main
    restart: unless-stopped
    ports:
      - '3002:80'

volumes:
  # Monitoring
  prometheus_data:
    name: grafana_prometheus_data

  # Nextcloud
  nextcloud_aio_mastercontainer:
    name: nextcloud_aio_mastercontainer

networks:
  # Monitoring
  monitoring:
    name: monitoring
    driver: bridge
  timescaledb:
    name: timescaledb
    driver: bridge
