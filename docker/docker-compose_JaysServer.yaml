name: jays-server
services:

  # Bitwarden
  bitwarden:
    profiles:
      - bitwarden
    container_name: bitwarden
    image: vaultwarden/server
    restart: unless-stopped
    env_file: ./bitwarden/.env
    environment:
      - DOMAIN=https://bitwarden.jayherron.org
      - PUSH_ENABLED=true
      - SIGNUPS_ALLOWED=false
    ports:
      - 3010:80
    volumes:
      - ~/Data/docker/bitwarden:/data/

  # Davical
    # Sourced from https://github.com/Elrondo46/davical-docker-standalone/blob/main/docker-compose.yml
    # Set the following environment variables:
    # - POSTGRES_PASSWORD: Should match PGSQL_ROOT_PASS
    # - PGSQL_ROOT_PASS: Should match POSTGRES_PASSWORD
    # - PASSDAVDB
    # - ADMINDAVICALPASS
  db: # This CANNOT be changed from db (even if changed below), since it appears to be hardcoded in DAViCal config. :(
    profiles:
      - davical
    image: postgres:14
    restart: unless-stopped
    volumes:
      - ~/Data/docker/davical/postgresql/:/var/lib/postgresql/data
    user: '1000'
  davical:
    profiles:
      - davical
    container_name: davical
    image: tuxnvape/davical-standalone
    restart: unless-stopped
    env_file: ./davical/.env
    environment:
      HOST_NAME: "jayherron.org"
      DBHOST: "db"
      LANG: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"
      DAVICAL_LANG: "en_US"
    ports:
      - 8083:80
    volumes:
      - ~/Data/docker/davical/config:/config

  # Envoy
  envoy:
    profiles:
      - envoy
    container_name: envoy
    image: envoyproxy/envoy:v1.28-latest
    restart: unless-stopped
    environment:
      - ENVOY_UID=0
    network_mode: host
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
      # You must provide your own certificate files
      - /etc/letsencrypt/:/etc/letsencrypt/:ro
  
  # Monitoring
    # https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker/#run-grafana-via-docker-compose
  grafana:
    profiles:
      - monitoring
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    environment:
      - GF_SERVER_ROOT_URL=https://grafana.jayherron.org/
    networks:
      - monitoring
    ports:
      - 3000:3000
    user: '1000' # Must match the user id of the user who owns the data directory
    volumes:
      - ~/Data/docker/grafana:/var/lib/grafana
  prometheus:
    profiles:
      - monitoring
    container_name: prometheus
    expose:
      - 9090
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
  node-exporter:
    profiles:
      - monitoring
    container_name: node-exporter
    image: prom/node-exporter:latest
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitoring
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
  
  # Mealie
    # https://docs.mealie.io/documentation/getting-started/installation/sqlite/
  mealie:
    profiles:
      - mealie
    container_name: mealie
    image: ghcr.io/mealie-recipes/mealie
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1000M
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Denver
      MAX_WORKERS: 1
      WEB_CONCURRENCY: 1
      BASE_URL: 'https://recipes.jayherron.org/'
    ports:
      - 9925:9000
    volumes:
      - ~/Data/docker/mealie:/app/data
    user: '1000'

  particle-sync:
    profiles:
      - particle-sync
    container_name: particle-sync
    image: registry.gitlab.com/needleinajaystack/particle-sync:latest
    restart: unless-stopped
    env_file:
      - ./particle-sync/.env

  timescaledb:
    profiles:
      - timescaledb
    container_name: timescaledb
    image: timescale/timescaledb:2.6.0-pg14
    restart: unless-stopped
    env_file: ./timescaledb/.env 
    ports:
      - 5432:5432
    volumes:
      - ~/Data/docker/timescaledb/:/var/lib/postgresql/data
      - /etc/passwd:/etc/passwd:ro # Bind-mounted for user access
    user: 1000:1000
  
  trello-bot:
    profiles:
      - trello-bot
    container_name: trello-bot
    image: ghcr.io/needleinajaystack/trello-bot:master
    restart: unless-stopped
    env_file:
      - ./trello-bot/.env
    ports:
      - '3333:3333'

volumes:
  # Monitoring
  prometheus_data:
    name: grafana_prometheus_data

networks:
  # Monitoring
  monitoring:
    name: monitoring
    driver: bridge
